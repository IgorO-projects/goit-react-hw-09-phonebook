{"version":3,"sources":["components/ContactForm/ContactForm.jsx","redux/actions/phonebook-operations.js","redux/actions/phonebook-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","views/ContactsView.module.css"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","nameCheked","contacts","find","contact","onSubmit","preventDefault","props","handlePhoneAdd","items","alert","this","className","styles","input","type","pattern","title","placeholder","required","onChange","button","Component","connect","dispatch","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","onChangeFilter","filteredContact","ContactList","fetchedContacts","list","renderedContacts","map","list__item","list__text","id","list__button","onClick","deletedContactbyId","deletedContactRequest","delete","deletedContactSuccess","deletedContactError","fetchContactRequest","get","fetchContactSuccess","fetchContactError","PhoneBookView","container","module","exports"],"mappings":"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","file":"static/js/3.bec07f2f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { handleContactAdd, } from '../../redux/actions/phonebook-operations';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  nameCheked = ( contacts, name ) => {\n    return contacts.find(contact => name === contact.name);\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { handlePhoneAdd, contacts } = this.props;\n    const contact = { name, number };\n\n    if(this.nameCheked(contacts.items, name)) {\n        alert(`${name} is already in Phonebook`)\n        return;\n      }   \n\n    handlePhoneAdd(contact)\n  }\n\n  \n  render() {\n\n    return (\n      <form onSubmit={this.onSubmit} >\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Name\"\n          required\n          value={this.state.name}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Number\"\n          required\n          value={this.state.number}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <button\n        className={styles.button}\n        type=\"submit\"\n        >Add contact</button>\n      </form>\n  );\n  }\n};\n\nContactForm.propTypes = {\n    handlePhoneAdd: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  handlePhoneAdd: (name) => dispatch(handleContactAdd(name)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deletedContactRequest,\n    deletedContactSuccess,\n    deletedContactError\n} from './phonebook-actions';\n\n\nexport const fetchContacts = () => dispatch => {\n    dispatch(fetchContactRequest())\n\n    axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error.message)))\n}\n\nexport const handleContactAdd = contact => dispatch => {\n    dispatch(addContactRequest())\n\n    axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)))\n};\n\nexport const deletedContact = id => dispatch => {\n    dispatch(deletedContactRequest())\n\n    axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deletedContactSuccess(id)))\n    .catch(error => dispatch(deletedContactError(error.message)))\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n// export const getFilteredContacts = state => {\n//     const { contacts } = state;\n  \n//     if(contacts.filter) {\n//       const normalizedFilter = getFilter(state).toLowerCase(); \n//       const filtredContacts = contacts.items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n//       return filtredContacts;\n//     }  \n\n//     return contacts.items;\n// }\n\nexport const getFilteredContacts = createSelector([getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase(); \n\n        if(filter) {\n            return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n        };\n\n        return contacts;\n    })","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { filteredContact } from '../../redux/actions/phonebook-actions';\nimport { getFilter } from '../../redux/actions/phonebook-selectors';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n    return (\n        <form>\n          <label>\n            <input\n            className={styles.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onChangeFilter}\n            placeholder=\"Find person\"\n            />\n          </label>\n        </form>\n    )\n}\n\nFilter.propTypes = { \n    filter: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event => dispatch(filteredContact(event))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { fetchContacts, deletedContact } from '../../redux/actions/phonebook-operations';\nimport { Component } from 'react';\nimport{ getFilteredContacts } from '../../redux/actions/phonebook-selectors';\n\nclass ContactList extends Component {\n  \n  componentDidMount() {\n    this.props.fetchedContacts()\n  }\n\n  render () {\n    return (\n      <ul className={styles.list}>\n        {this.props.renderedContacts.map(contact => {\n          return (\n            <li \n            className={styles.list__item}\n            key={contact.id}>\n              <span\n              className={styles.list__text}\n              >{contact.name}: {contact.number}</span>\n              <button\n              id={contact.id}\n              className={styles.list__button}\n              type=\"button\"\n              onClick={this.props.deletedContactbyId}\n              >delete</button>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nContactList.propTypes = {\n    renderedContacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  renderedContacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deletedContactbyId: event => {dispatch(deletedContact(event.currentTarget.id))},\n  fetchedContacts: () => {dispatch(fetchContacts())},\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n// const mapStateToProps = state => {\n//   const { contacts } = state;\n  \n//   if(contacts.filter) {\n//     const normalizedFilter = contacts.filter.toLowerCase(); \n//     const filtredContacts = contacts.items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n//     return {\n//       renderedContacts: filtredContacts,\n//     }\n//   }  \n\n//   return {\n//     renderedContacts: contacts.items,\n//   }\n// }","import ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport styles from './ContactsView.module.css';\n\nconst PhoneBookView = () => {\n    return(\n        <div className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n        </div>\n    )\n}\n\nexport default PhoneBookView;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list__item\":\"ContactList_list__item__2uVIv\",\"list__text\":\"ContactList_list__text__1taay\",\"list__button\":\"ContactList_list__button__2Ij86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsView_container__EJlU-\",\"title\":\"ContactsView_title__2VWFk\"};"],"sourceRoot":""}