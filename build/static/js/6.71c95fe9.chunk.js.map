{"version":3,"sources":["views/RegisterView.module.css","views/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","container","onSubmit","form","autoComplete","label","type","onChange","variant","Component","mapDispatchToProps","register","connect"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,KAAO,2BAA2B,MAAQ,8B,gJCMlGC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAIZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAOjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACrB,OACE,sBAAKW,UAAWC,IAAOC,UAAvB,UACE,mDAEA,uBAAMC,SAAUJ,KAAKL,aAAcM,UAAWC,IAAOG,KAAMC,aAAa,MAAxE,UACE,wBAAOL,UAAWC,IAAOK,MAAzB,iBAEE,uBAAOC,KAAK,OAAOpB,KAAK,OAAOK,MAAOL,EAAMqB,SAAUT,KAAKT,kBAG7D,wBAAOU,UAAWC,IAAOK,MAAzB,kBAEE,uBACEC,KAAK,QACLpB,KAAK,QACLK,MAAOJ,EACPoB,SAAUT,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOK,MAAzB,qBAEE,uBACEC,KAAK,WACLpB,KAAK,WACLK,MAAOH,EACPmB,SAAUT,KAAKT,kBAGnB,cAAC,IAAD,CAAQmB,QAAQ,iBAAiBF,KAAK,SAAtC,oC,GAtDiBG,aA6DrBC,EAAqB,CACzBb,WAAYc,KAECC,sBAAQ,KAAMF,EAAdE,CAAkC5B","file":"static/js/6.71c95fe9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterView_container__poo8e\",\"form\":\"RegisterView_form__TM3g0\",\"label\":\"RegisterView_label__3Dzya\"};","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './RegisterView.module.css';\nimport { register } from '../redux/auth/auth-operations';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  }\n\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state)\n    this.setState({ name: '', email: '', password: '' });\n    // dispatch(authOperations.register({ name, email, password }));\n    // setName('');\n    // setEmail('');\n    // setPassword('');\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div className={styles.container}>\n        <h1>Registration page</h1>\n  \n        <form onSubmit={this.handleSubmit} className={styles.form} autoComplete=\"off\">\n          <label className={styles.label}>\n            Name\n            <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n          </label>\n  \n          <label className={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n  \n          <label className={styles.label}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n          <Button variant=\"outline-danger\" type=\"submit\">Register now</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: register,\n}\nexport default connect(null, mapDispatchToProps)(RegisterView);"],"sourceRoot":""}