{"version":3,"sources":["redux/actions/phonebook-actions.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Container/Container.jsx","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","reportWebVitals.js","redux/actions/phonebook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deletedContactRequest","deletedContactSuccess","deletedContactError","filteredContact","event","payload","currentTarget","value","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","Container","children","className","styles","container","getIsAuthenticated","state","isAuthenticated","getUseremail","user","email","connect","IsAuthenticated","to","exact","link","activeClassName","activeLink","AuthNav","mapDispatchToProps","OnLogout","avatar","defaultAvatar","src","alt","width","name","Button","variant","type","onClick","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactReducer","createReducer","filter","contact","id","filterReducer","_","loadingReducer","combineReducers","items","loading","initialUserState","__","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fde58eeb.chunk.js","sourcesContent":["// import types from './phonebook-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest');\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess');\nexport const fetchContactError = createAction('phonebook/fetchContactError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deletedContactRequest = createAction('phonebook/deletedContactRequest');\nexport const deletedContactSuccess = createAction('phonebook/deletedContactSuccess');\nexport const deletedContactError = createAction('phonebook/deletedContactError');\n\nexport const filteredContact = createAction(\"phonebook/filter\", event => {\n    return {\n        payload: event.currentTarget.value\n    }\n})\n\n\n\n// export const handleContactAdd = createAction(\"phonebook/add\", contact => {\n//     return {\n//         payload: {\n//             id: uuidv4(),\n//             name: contact.name,\n//             number: contact.number,\n//         }\n//     }\n// })\n\n\n// export const deletedContact = createAction(\"phonebook/delete\")","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import axios from \"axios\";\nimport { \n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n} from './auth-actions.js';\n\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    }\n};\n\nexport const register = credentials => async dispatch => {\n    dispatch(registerRequest());\n\n    try {\n        const response = await axios.post('/users/signup', credentials);\n\n        token.set(response.data.token);\n        dispatch(registerSuccess(response.data));\n    } catch(error) {\n        dispatch(registerError(error.message));\n    }\n}\n\nexport const logIn = credentials => async dispatch => {\n    dispatch(loginRequest());\n\n    try {\n        const response = await axios.post('/users/login', credentials);\n\n        token.set(response.data.token);\n        dispatch(loginSuccess(response.data));\n    } catch(error) {\n        dispatch(loginError(error.message));\n    }\n}\n\nexport const logOut = () => async dispatch => {\n    dispatch(logoutRequest());\n\n    try {\n        await axios.post('/users/logout');\n\n        token.unset();\n        dispatch(logoutSuccess());\n    } catch(error) {\n        dispatch(logoutError(error.message));\n    }\n}\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken } \n    } = getState();\n    \n    if(!persistedToken) {\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(getCurrentUserRequest);\n\n    try {\n        const response = await axios.get('/users/current');\n\n        dispatch(getCurrentUserSuccess(response.data));\n    } catch(error) {\n        dispatch(getCurrentUserError(error.message));\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"avatar\":\"UserMenu_avatar__2e7Jj\",\"name\":\"UserMenu_name__3e8KV\",\"button\":\"UserMenu_button__3mTE-\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>\n            {children}\n        </div>\n    );\n};\n\nexport default Container;","export const getIsAuthenticated = state => state.auth.isAuthenticated;\nexport const getUseremail = state => state.auth.user.email;","import { connect } from \"react-redux\";\nimport { NavLink } from 'react-router-dom';  \nimport styles from './Navigation.module.css';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors.js';\n\n\nconst Navigation = ({ IsAuthenticated }) => (\n  <nav>\n    <NavLink \n      to=\"/\" \n      exact \n      className={styles.link} \n      activeClassName={styles.activeLink}\n    >\n      Main\n    </NavLink>\n\n    {IsAuthenticated && <NavLink\n      to=\"/contacts\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Contacts\n    </NavLink>}\n  </nav>\n);\nconst mapStateToProps = state => ({\n  IsAuthenticated: getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps)(Navigation);","import { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Sign up\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Sign in\n      </NavLink>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/avatar.0be4f608.png\";","import { connect } from 'react-redux';\nimport defaultAvatar from './avatar.png'\nimport styles from './UserMenu.module.css';\nimport { getUseremail } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n  \nconst UserMenu = ({ avatar, email, OnLogout }) => {\n\n    return (\n      <div className={styles.container}>\n        <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\n        <span className={styles.name}>Hello there, {email}</span>\n        <Button variant=\"danger\" type=\"button\" onClick={OnLogout}>\n          Quit..\n        </Button>\n      </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n  email: getUseremail(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  OnLogout: logOut,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport styles from './AppBar.module.css';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport { connect } from 'react-redux';\n\n\n const AppBar = ({ isAuthenticated }) => {\n\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state)\n})\n\nexport default connect(mapStateToProps)(AppBar);","import { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ component: Component, IsAuthenticated, redirectTo, ...routeProps }) => (\n    <Route \n        {...routeProps} \n        render={props => IsAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} /> } \n    />\n);\n\nconst mapStateToProps = state => ({\n    IsAuthenticated: getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute =( { component: Component, IsAuthenticated, redirectTo, ...routeProps }) => (\n    <Route\n    {...routeProps}\n    render={props => IsAuthenticated && routeProps.restricted ? (\n    <Redirect to={redirectTo} />):(\n    <Component {...props} />)}\n    />\n);\n\nconst mapStateToProps = state => ({\n    IsAuthenticated: getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps)(PublicRoute); ","import { Route, Switch } from \"react-router\";\nimport { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from './components/Container';\nimport AppBar from \"./components/AppBar/AppBar\";\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nconst HomeView = lazy(()=>import('./views/HomeView'));\nconst RegisterView = lazy(()=>import('./views/RegisterView'));\nconst LoginView = lazy(()=>import('./views/LoginView'));\nconst ContactsView = lazy(()=>import('./views/ContactsView'));\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  };\n\n  render() {\n    return (\n      <>\n      <Container>\n        <AppBar/>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PublicRoute \n              path=\"/register\" \n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}/>\n            <PublicRoute \n              path=\"/login\" \n              restricted \n              redirectTo=\"/contacts\"\n              component={LoginView}/>\n            <PrivateRoute \n              path=\"/contacts\" \n              redirectTo=\"/login\"\n              component={ContactsView}/>\n          </Switch>\n        </Suspense>\n      </Container>\n      </>\n    );\n  };\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n// import types from './phonebook-types';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deletedContactRequest,\n    deletedContactSuccess,\n    deletedContactError,\n    filteredContact\n} from '../actions/phonebook-actions';\n\nconst initialState = [\n    // {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    // {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    // {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    // {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n];\n\nconst contactReducer = createReducer(initialState, {\n    [fetchContactSuccess]: (state, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deletedContactSuccess]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n})\n\nconst filterReducer = createReducer('', {\n    [filteredContact]: (_, { payload }) => payload,\n})\n\nconst loadingReducer = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deletedContactRequest]: () => true,\n    [deletedContactSuccess]: () => false,\n    [deletedContactError]: () => false,\n})\n\nexport default combineReducers({\n    items: contactReducer,\n    filter: filterReducer,\n    loading: loadingReducer\n})\n\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { \n    // registerRequest,\n    registerSuccess,\n    registerError,\n//     loginRequest,\n    loginSuccess,\n    loginError,\n//     logoutRequest,\n    logoutSuccess,\n    logoutError,\n//     getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n} from './auth-actions.js';\n\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [registerSuccess]: (_, { payload }) => payload.user,\n    [loginSuccess]: (_, { payload }) => payload.user,\n    [logoutSuccess]: (_, __) => initialUserState,\n    [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [registerSuccess]: (_, { payload }) => payload.token,\n    [loginSuccess]: (_, { payload }) => payload.token,\n    [logoutSuccess]: (_, __) => null,\n});\n\nconst error = createReducer(null, {\n    [registerError]: (_, { payload }) => payload,\n    [loginError]: (_, { payload }) => payload,\n    [logoutError]: (_, { payload }) => payload,\n    [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [registerSuccess]: () => true,\n    [loginSuccess]: () => true,\n    [logoutSuccess]: () => false,\n    [getCurrentUserSuccess]: () => true,\n    [registerError]: () => false,\n    [loginError]: () => false,\n    [getCurrentUserError]: () => false,\n})\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error,\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from './actions/phonebook-reducer';\nimport authReducer from './auth/auth-reducer';\nimport storage from 'redux-persist/lib/storage'\n\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER } from 'redux-persist';\n\n\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    },\n  }),\n  logger];\n\n  const authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n}\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: phonebookReducer,\n    },\n    middleware, \n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store , persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}> \n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}